#!/usr/bin/env python
# coding: utf-8

# In[1]:


import numpy as np
import pandas as pd

from scipy.stats import norm
from math import sqrt


# 1. Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# 
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# 
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy Полученные значения должны быть равны.
# 
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков, а затем с использованием функций из библиотек numpy и pandas.
# 

# In[2]:


x = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110]) #заработная плата заемщиков банка
y = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832]) #значения их поведенческого кредитного скринига


# In[3]:


cov1 = (x*y).mean() - x.mean()*y.mean()
cov2 = np.cov(x, y, ddof=0)

print(f'Ковариация с помощью элементарных действий: {cov1:0.6}')
print(f'Ковариация с помощью функции cov из numpy: {cov2}')


# In[4]:


cor1 = cov1 / (np.std(x)*np.std(y))
cor2 = np.corrcoef(x, y)

print(f'Коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков: {cor1:0.8}')
print(f'Коэффициент корреляции Пирсона с использованием функций из библиотеки numpy: {cor2}')


# 2. Измерены значения IQ выборки студентов, обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# 
# Известно, что в генеральной совокупности IQ распределен нормально.
# 
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

# In[5]:


x = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
n = len(x)
p = 0.95
α = 1 - p #уровень значимости (вероятность ошибки I рода)
t = 2.262 #по таблице от v=n-1=10-1=9 и alpha=0.05/2=0.025

μ = x.mean() #sum(df)/len(df) #оценка математического ожидания
σ = np.std(x, ddof = 1) #срееднее квдратичное отклонение распределенной нормально генеральной совокупности
I = t * σ / sqrt(n)
T1 = μ - I
T2 = μ + I

print(f'Оценка математического ожидания (μ) - {μ:0.5}, среднеквадратичное отклонение (σ) - {σ:0.5}, интервал - {I:0.5}')
print(f'Доверительный интервал для оценки математического ожидания: [{T1:0.6}; {T2:0.6}]')


# 3. Известно, что рост футболистов в сборной распределен нормально
# с дисперсией генеральной совокупности, равной 25 кв.см. Объем выборки равен 27, среднее выборочное составляет 174.2.
# 
# Найдите доверительный интервал для математического

# In[6]:


σ = sqrt(25) #срееднее квдратичное отклонение распределенной нормально генеральной совокупности
n = 27 #объем выборки
μ = 174.2 #выборочная средняя
p = 0.95 #в задаче не указана надежность, предположила, что ошибочно
α = 1-p #уровень значимости (вероятность ошибки I рода)
Z = 1.96 #Z-критерий по таблице от надежности доверительного интервала 0.95 (0.95+0.05/2=0.975)

I = Z * σ / sqrt(n)
T1 = μ - I
T2 = μ + I

print(f'Интервал - {I:0.5}')
print(f'Доверительный интервал для оценки математического ожидания: [{T1:0.6}; {T2:0.6}]')


# In[ ]:




